@model Mtwx.Web.Models.ApplicationRoleViewModel

@{
    ViewBag.Title = "Create New Application Role";
}

<div class="row" style="margin-top: 10px;">
    <div class="col col-md-2">
        <div class="sidebar-nav-fixed affix">
            <ul class="nav nav-pills flex-column">
                <li class="nav-item"><a class="nav-link" id="saveButton" href="#">Save</a></li>
                <li class="nav-item">@Html.ActionLink("Cancel", "Index", "ApplicationRole", new { Area = "Admin" }, new { @class = "nav-link" })</li>
            </ul>
        </div>
    </div>
    <div class="col col-md-10 card">
        <div class="card-header">
            <div class="card-title">@ViewBag.Title</div>
        </div>
        @using (Html.BeginForm("Create", "ApplicationRole", new { Area = "Admin" }, FormMethod.Post, new { id = "mainForm" })) 
        {
            @Html.AntiForgeryToken()
            <div class="card-body">
                <div class="form-row">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.RoleName)
                        @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
    
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.Description)
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group col-md-12">
                        @Html.LabelFor(model => model.ExternalSitesCsv)
                        @Html.EditorFor(model => model.ExternalSitesCsv, new { @class = "no-max-width" })
                    </div>
                </div>
    
            </div>
        }
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function() {
            $('#saveButton').on('click', function(e) {
                e.preventDefault();
                $('#mainForm').submit();
            });

            $('#ExternalSitesCsv').selectize({
                preload: true,
                plugins: ['remove_button'],
                options: @Html.Raw(Json.Encode(Model.ExternalSites.Select(x => new {x.Id, x.Name}))),
                hideSelected: true,
                delimter: ',',
                persist: false,
                valueField: 'Id',
                labelField: 'Name',
                searchField: 'Name',
                openOnFocus: true,
                create: false,
                render: {
                    option: function(item, escape) {
                        return '<div>' + escape(item.Name) + '</div>';
                    }
                }
            });
        });

    </script>
}

